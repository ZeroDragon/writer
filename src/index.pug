-
  const menuItems = [
    ['fullscreen', 'Full screen'],
    ['insert_drive_file', 'New'],
    ['save', 'Save'],
    ['{{sfx}}', 'Toggle sound'],
    ['{{theme}}', 'Toggle theme'],
    ['{{zenMode}}', 'Toggle Zen'],
    ['spacer'],
    ['help_outlined', 'Help']
  ]
-
  const helpData = [
    ['S', 'Save Draft'],
    ['N', 'New Draft'],
    [0,'Regular text'],
    [1,'Heading 1'],
    [2,'Heading 2'],
    [3,'Align left'],
    [4,'Align center'],
    [5,'Align right'],
    [6,'Justify'],
  ]
doctype html
html
  head
    meta(charset="UTF-8")
    title=process.env.AppName
    link(rel="stylesheet" href="app.css")
    link(rel="preconnect" href="https://fonts.googleapis.com")
    link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
    link(href="https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet")
    script(src="zero.js")
  body#app: div(z-class="theme {{themeName}}")
    .app
      .sidebar
        ul
          for item in menuItems
            if item[0] === 'spacer'
              li: .item
            else
              li: .item(z:click=`${item[0]}`)
                span.icon.material-icons-outlined=item[0]
                span.label=item[1]
      .content#content(
        contentEditable="true"
        z:keyDown="createSound"
        z:keyUp="updateContent"
        z:click="tryZenMode"
        z-model="content"
      )
      .footer
        span words:&nbsp;
        span {{ wordCount }}
        span &nbsp;of&nbsp;
        input.wordset(
          z-model="goal"
          placeholder="Goal"
          name="wordGoal"
        )
        span &nbsp;-&nbsp;
        span(z:click="incrementTimeLeft")
          .icon.material-icons-outlined more_time
        input.timeset(
          z-model="timeGoal"
          placeholder="hh:mm:ss"
          z:blur="setTimeGoal"
          z:focus="startEditingTimeGoal"
          z:tick="tickTimeGoal"
          name="timeGoal"
        )
        span(z-if="timerIsRunning" z:click="resetTimeGoal")
          .icon.material-icons-outlined timer_off
    .modal(z-if="modal.visible")
      .modal-content
        .title {{ modal.title }}
        div {{ !modal.message }}
        .buttons
          for button in ['primary', 'secondary', 'warning']
            button(
              class=button
              z:click=`modal.buttons.${button}.action`
              z-if=`modal.buttons.${button}`
            ) {{ modal.buttons.#{button}.text }}
    #helpData(z-if="false")
      ul
        for desc in helpData
          li
            strong Alt (ctrl on mac) + #{desc[0]}
            |: #{desc[1]}
        li.
          <br/>Also any regular text editing shortcuts like<br/><strong>Ctrl + B</strong> for bold, <strong>Ctrl + I</strong> for italics, etc.
    script(src="app.js")
    if process.env.NODE_ENV === 'development'
      script.
        document.write('<script src="http://'
          + (location.host || 'localhost').split(':')[0]
          + ':35729/livereload.js?snipver=1"></'
          + 'script>')
